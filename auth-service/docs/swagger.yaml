host: localhost:3000
basePath: /auth
info:
  contact:
    email: support@example.com
    name: API Support
  description: Authentication service API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service API
  version: "1.0"
paths:
  /forgot-password:
    post:
      consumes:
      - application/json
      description: Request a password reset link for a registered email
      parameters:
      - description: User email
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Password reset link sent if email exists
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid request body or validation error
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Request password reset
      tags:
      - auth
  /google:
    get:
      description: Redirect user to Google OAuth consent screen
      produces:
      - application/json
      responses:
        "302":
          description: Redirect to Google OAuth consent screen
          schema:
            type: string
      summary: Initiate Google OAuth login
      tags:
      - auth
  /google/callback:
    get:
      description: Process the OAuth code from Google, set HTTP-only cookies with tokens, and redirect to frontend
      parameters:
      - description: OAuth authorization code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirect to frontend with tokens set as HTTP-only cookies
          schema:
            type: string
        "400":
          description: Invalid or missing code parameter
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Handle Google OAuth callback
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user with email and password
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            properties:
              data:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                type: object
              message:
                type: string
            type: object
        "400":
          description: Invalid request body or validation error
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Login user
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Get a new access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            properties:
              data:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                type: object
              message:
                type: string
            type: object
        "400":
          description: Invalid request body or validation error
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Invalid token
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Refresh access token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            properties:
              data:
                properties:
                  email:
                    type: string
                type: object
              message:
                type: string
            type: object
        "400":
          description: Invalid request body or validation error
          schema:
            properties:
              message:
                type: string
            type: object
        "409":
          description: Email already exists
          schema:
            properties:
              message:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /reset-password:
    post:
      consumes:
      - application/json
      description: Reset a user's password using a reset token
      parameters:
      - description: Reset token and new password
        in: body
        name: request
        required: true
        schema:
          properties:
            new_password:
              type: string
            token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Password has been reset successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid request body, token, or password validation error
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Reset user password
      tags:
      - auth
  /verify-token:
    post:
      consumes:
      - application/json
      description: Verify the validity of an authentication token and return user
        information
      parameters:
      - description: Authentication token
        in: body
        name: request
        required: true
        schema:
          properties:
            token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Token verified successfully
          schema:
            properties:
              data:
                properties:
                  user:
                    type: object
                type: object
              message:
                type: string
            type: object
        "400":
          description: Invalid request body or validation error
          schema:
            properties:
              message:
                type: string
            type: object
        "401":
          description: Invalid token
          schema:
            properties:
              message:
                type: string
            type: object
      summary: Verify authentication token
      tags:
      - auth
swagger: "2.0"
