services:
  traefik:
    image: traefik:v3.4

    networks:
      - labs_proxy

    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certs:/certs:ro
      - ./traefik/dynamic:/dynamic:ro

    env_file:
      - ./traefik/.env.local

    command:
      - "--entrypoints.web.address=:80"

      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"

      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"

      - "--providers.file.filename=/dynamic/tls.yaml"

      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.watch=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.swarm.network=labs_proxy"

      - "--api.dashboard=true"
      - "--api.insecure=false"

      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"

    deploy:
      mode: replicated
      replicas: 1
      placement:

        constraints:
          - node.role == manager

      labels:
        - "traefik.enable=true"

        - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`)"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.tls=true"

        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  whoami:
    image: traefik/whoami
    networks:
      - labs_proxy
    env_file:
      - ./traefik/.env.local
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_HOST}`)"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.tls=true"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"

  mongo:
    image: mongo:latest
    networks:
      - labs_internal
    env_file:
      - ./mongo/.env.local
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./mongo/data:/data/db

  auth-service:
    build:
      dockerfile: ./auth-service/Dockerfile
    networks:
      - labs_proxy
      - labs_internal
    env_file:
      - ./auth-service/.env.local
    command: [ "./app" ]
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.auth-service.rule=Host(`${HOSTNAME}`)"
        - "traefik.http.routers.auth-service.entrypoints=websecure"
        - "traefik.http.routers.auth-service.tls=true"
        - "traefik.http.services.auth-service.loadbalancer.server.port=3000"

#   TODO: add gateway-service

networks:
  labs_proxy:
    name: labs_proxy
    driver: overlay
    attachable: true

  labs_internal:
    name: labs_internal
