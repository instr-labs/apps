services:
  traefik:
    image: traefik:v3.5
    restart: unless-stopped
    depends_on:
      - gateway-service
      - web
      - prometheus
    security_opt:
      - no-new-privileges:true

    networks:
      - proxy

    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"

      - "--providers.file.filename=/dynamic/tls.yaml"

      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"

      # API & Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=false"

      # Observability
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certs:/certs:ro
      - ./traefik/dynamic:/dynamic:ro

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${DASHBOARD_AUTH}"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  prometheus:
    image: prom/prometheus:v2.50.1
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - proxy
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_HOST}`)"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      - "traefik.http.middlewares.prometheus-auth.basicauth.users=${PROMETHEUS_AUTH}"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  mongo:
    image: mongo:8.0.12
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - proxy
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  nats:
    image: nats:2.10.12-alpine
    restart: unless-stopped
    command: ["-js", "-m", "8222"]
    networks:
      - proxy
    volumes:
      - nats_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nats-monitoring.rule=Host(`${NATS_MONITORING_HOST}`)"
      - "traefik.http.routers.nats-monitoring.entrypoints=websecure"
      - "traefik.http.routers.nats-monitoring.tls=true"
      - "traefik.http.routers.nats-monitoring.middlewares=nats-auth"
      - "traefik.http.middlewares.nats-auth.basicauth.users=${NATS_MONITORING_AUTH}"
      - "traefik.http.services.nats-monitoring.loadbalancer.server.port=8222"

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    restart: unless-stopped
    command: [ "./app" ]
    env_file:
      - ./auth-service/.env
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=Host(`${AUTH_SERVICE_HOST}`)"
      - "traefik.http.routers.auth-service.tls=true"
      - "traefik.http.routers.auth-service.entrypoints=websecure"
      - "traefik.http.services.auth-service.loadbalancer.server.port=3000"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    restart: unless-stopped
    command: [ "./app" ]
    env_file:
      - ./gateway-service/.env
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway-service.rule=Host(`${API_HOST}`)"
      - "traefik.http.routers.gateway-service.tls=true"
      - "traefik.http.routers.gateway-service.entrypoints=websecure"
      - "traefik.http.services.gateway-service.loadbalancer.server.port=3000"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    restart: unless-stopped
    env_file:
      - ./web/.env
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${WEB_HOST}`)"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.services.web.loadbalancer.server.port=3000"

#  TITIP
  pdf-reader:
    image: histweety/pdf-reader:latest
    restart: unless-stopped
    environment:
      OPENAI_API_KEY: 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

    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pdf-reader.rule=Host(`book.histweetyy.cc`)"
      - "traefik.http.routers.pdf-reader.tls=true"
      - "traefik.http.routers.pdf-reader.entrypoints=websecure"
      - "traefik.http.services.pdf-reader.loadbalancer.server.port=3000"

networks:
  proxy:
    name: proxy

volumes:
  mongo_data:
  nats_data:
  prometheus_data: