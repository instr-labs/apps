{
  "openapi": "3.0.3",
  "info": {
    "title": "Payment Service API",
    "version": "1.0.0",
    "description": "Payment service API documentation"
  },
  "servers": [
    { "url": "http://localhost:3000/payment", "description": "Local" }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "ok" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List products",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" },
            "description": "If true, returns only active products"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } }
              }
            }
          },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      },
      "post": {
        "summary": "Create a product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Product" } }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      }
    },
    "/products/key/{key}": {
      "get": {
        "summary": "Get product by key",
        "parameters": [
          { "$ref": "#/components/parameters/KeyParam" }
        ],
        "responses": {
          "200": { "description": "Product found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } } },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "parameters": [
          { "$ref": "#/components/parameters/IdParam" }
        ],
        "responses": {
          "200": { "description": "Product found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } } },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      },
      "patch": {
        "summary": "Update a product",
        "parameters": [ { "$ref": "#/components/parameters/IdParam" } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "key": { "type": "string" },
                  "price": { "type": "number", "format": "double" },
                  "description": { "type": "string" },
                  "image": { "type": "string" },
                  "productType": { "type": "string" },
                  "active": { "type": "boolean" },
                  "isFree": { "type": "boolean" }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated", "content": { "application/json": { "schema": { "type": "object", "properties": { "status": { "type": "string", "example": "updated" } } } } } },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "parameters": [ { "$ref": "#/components/parameters/IdParam" } ],
        "responses": {
          "204": { "description": "Product deleted" },
          "500": { "$ref": "#/components/responses/InternalError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "readOnly": true },
          "name": { "type": "string" },
          "key": { "type": "string" },
          "price": { "type": "number", "format": "double" },
          "description": { "type": "string" },
          "image": { "type": "string" },
          "productType": { "type": "string" },
          "userId": { "type": "string", "readOnly": true },
          "active": { "type": "boolean" },
          "isFree": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time", "readOnly": true },
          "updatedAt": { "type": "string", "format": "date-time", "readOnly": true }
        },
        "required": [ "name", "key", "price", "active", "isFree" ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      }
    },
    "parameters": {
      "IdParam": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "description": "Product ID"
      },
      "KeyParam": {
        "name": "key",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "description": "Product key"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      },
      "InternalError": {
        "description": "Internal server error",
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Error" } }
        }
      }
    }
  }
}
