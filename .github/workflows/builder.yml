name: builder

on:
  workflow_dispatch:
    inputs:
      serviceName:
        description: 'Service name(s), comma-separated for multiple (e.g., auth-service or auth-service,gateway-service,image-service)'
        required: true
        default: 'gateway-service'
        type: string
      enviroment:
        description: 'environment name (e.g., dev, staging, production)'
        required: true
        default: 'dev'
        type: string

jobs:
  docker:
    name: Build and Push (${{ matrix.service }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJSON(format('["{0}"]', replace(inputs.serviceName, ',', '","'))) }}
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      SERVICE_NAME: ${{ matrix.service }}
      REPO_NAME: instrlabs-${{ matrix.service }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REPO_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}"
          SHA_TAG="${GITHUB_SHA::7}"

          # Manual input tag (preferred when provided)
          if [[ -n "${{ github.event.inputs.enviroment }}" ]]; then
            TAGS=("${REPO_NAME}:${SHA_TAG}-${{ github.event.inputs.enviroment }}")
          fi

          TCSV=$(IFS=, ; echo "${TAGS[*]}")
          echo "tags=$TCSV" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.SERVICE_NAME }}
          file: ./${{ env.SERVICE_NAME }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "Service: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "Docker Repo: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "Pushed tags:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' >> $GITHUB_STEP_SUMMARY
